apiVersion: v1
kind: Service
metadata:
  labels:
    app: {{ template "cassandrademo.fullname" . }}
  name: {{ template "cassandrademo.fullname" . }}-headless
spec:
  clusterIP: None
  ports:
  - port: 9042
  selector:
    app: {{ template "cassandrademo.fullname" . }}
---
apiVersion: v1
kind: Service
metadata:
  name: {{ template "cassandrademo.fullname" . }}-nodeport
spec:
  type: NodePort
  ports:
  - name: {{ template "cassandrademo.fullname" . }}-nodeport
    port: 9042
    targetPort: 9042
    nodePort: {{ .Values.service.nodeport }}
    protocol: TCP
  selector:
    app: {{ template "cassandrademo.fullname" . }}
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ template "cassandrademo.fullname" . }}
  labels:
    app: {{ template "cassandrademo.fullname" . }}
spec:
  serviceName: {{ template "cassandrademo.fullname" . }}-headless
  replicas: {{ .Values.cluster.replicaCount }}
  selector:
    matchLabels:
      app: {{ template "cassandrademo.fullname" . }}
  template:
    metadata:
      labels:
        app: {{ template "cassandrademo.fullname" . }}
    spec:
      terminationGracePeriodSeconds: 1800
      containers:
      - name: cassandra
        image: erickeliseo/cassandra:{{ .Values.image.tag }}
        imagePullPolicy: Always
        ports:
        - containerPort: 7000
          name: intra-node
        - containerPort: 7777
          name: mon
        - containerPort: 7001
          name: tls-intra-node
        - containerPort: 7199
          name: jmx
        - containerPort: 9042
          name: cql
        resources:
          limits:
            cpu: "1"
            memory: 2Gi
          requests:
           cpu: "1"
           memory: 2Gi
        securityContext:
          capabilities:
            add:
              - IPC_LOCK
        lifecycle:
          preStop:
            exec:
              command:
              - /bin/sh
              - -c
              - nodetool drain
        env:
          - name: MAX_HEAP_SIZE
            value: 1024M
          - name: CASSANDRA_DATA
            value: /cassandra_data
          - name: HEAP_NEWSIZE
            value: 100M
          - name: CASSANDRA_SEEDS
            value: "{{ template "cassandrademo.fullname" . }}-0.{{ template "cassandrademo.fullname" . }}-headless.default.svc.cluster.local"
          - name: CASSANDRA_CLUSTER_NAME
            value: "K8Demo"
          - name: CASSANDRA_DC
            value: "DC1-K8Demo"
          - name: CASSANDRA_RACK
            value: "Rack1-K8Demo"
          - name: POD_IP
            valueFrom:
              fieldRef:
                fieldPath: status.podIP
        # These volume mounts are persistent. They are like inline claims,
        # but not exactly because the names need to match exactly one of
        # the stateful pod volumes.
        volumeMounts:
        - name: cassandra-data
          mountPath: /var/lib/cassandra
  # These are converted to volume claims by the controller
  # and mounted at the paths mentioned above.
  # do not use these in production until ssd GCEPersistentDisk or other ssd pd
  volumeClaimTemplates:
  - metadata:
      name: cassandra-data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: rook-block
      resources:
        requests:
          storage: 1Gi
